{
    "swagger": "2.0",
    "info": {
      "description": "API endpoints to connect to database deployed on Heroku.",
      "version": "1.0.0",
      "title": "Hisham Abi Farah Portfolio Backend",
      "contact": {
        "email": "hisham.abi.farah@gmail.com"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "host": "hix-io.herokuapp.com/api",
    "tags": [
      {
        "name": "projects",
        "description": "Projects list"
      },
      {
        "name": "skills",
        "description": "Skills list"
      },
      {
        "name": "categories",
        "description": "Categories list"
      },
      {
        "name": "users",
        "description": "Operations about user"
      }
    ],
    "schemes": [
      "http",
      "https"
    ],
    "paths": {
      "/project": {
        "post": {
          "tags": [
            "projects"
          ],
          "summary": "Add a new project",
          "description": "",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Project object that needs to be added to the database",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Project"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid input"
            }
          },
          "security": [

          ]
        },
        "put": {
          "tags": [
            "projects"
          ],
          "summary": "Update an existing project",
          "description": "",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Project object that needs to be updated",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Project"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid category ID supplied"
            },
            "404": {
              "description": "Project not found"
            },
            "405": {
              "description": "Validation exception"
            }
          },
          "security": [

          ]
        }
      },
      "/projects": {
        "get": {
          "tags": [
            "projects"
          ],
          "summary": "List Projects",
          "description": "Page number can be supplied; if not defaults to page 1",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "page number",
              "required": false,
              "type": "String",
              "collectionFormat": "multi"
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Project"
                }
              }
            },
            "400": {
              "description": "Invalid status value"
            }
          },
          "security": [

          ]
        }
      },
      "/projects/{projectId}": {
        "get": {
          "tags": [
            "projects"
          ],
          "summary": "Find project by ID",
          "description": "Returns a single project",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "projectId",
              "in": "path",
              "description": "ID of project to return",
              "required": true,
              "type": "string",
              "format": "ObjectId"
            } 
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "schema": {
                "$ref": "#/definitions/Project"
              }
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Project not found"
            }
          },
          "security": [
            {
              "api_key": []
            }
          ]
        },
        "delete": {
          "tags": [
            "projects"
          ],
          "summary": "Deletes a project",
          "description": "",
          "operationId": "deleteproject",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "api_key",
              "in": "header",
              "required": false,
              "type": "string"
            },
            {
              "name": "projectId",
              "in": "path",
              "description": "project id to delete",
              "required": true,
              "type": "integer",
              "format": "int64"
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "project not found"
            }
          },
          "security": [

          ]
        }
      }
    },

    "definitions": {
      "Project": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "format": "ObjectId"
          },
          "title": {
            "type": "string"
          },
          "numberOfUpdates": {
            "type": "integer",
            "format": "int32"
          },
          "category": {
            "$ref": "#/definitions/Category"
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "ObjectId"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "Skill": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "ObjectId"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Skill"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "format": "int32",
            "description": "User Status"
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "EndPaginationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "array"
          }
        }
      }
    }
  }